{"version":3,"file":"static/js/782.76d83217.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Input.module.css?27e8","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","redux/items/selectors.js","redux/filter/selectors.js","webpack://react-homework-template/./src/components/AddRandom/AddRandom.module.css?8598","components/AddRandom/AddRandom.jsx","components/pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__j+P5X\",\"name\":\"Contact_name__xbxVU\",\"tel\":\"Contact_tel__F8aKt\",\"btn\":\"Contact_btn__JzanX\"};","import css from './Contact.module.css';\nimport im from './1.png';\nimport del from './del.png';\nimport { useState } from 'react';\n// import PropTypes from 'prop-types';\n\nconst Contact = props => {\n  const { name, id, number, deleteItem } = props;\n  console.log(props);\n  const [state, changeState] = useState({\n    backgroundColor: '#b2faa2',\n    fontWeight: 400,\n  });\n  //.\n  return (\n    <li className={css.item}>\n      <p className={css.name} style={state}>\n        {name}\n      </p>\n      <p className={css.tel} style={state}>\n        {number}\n      </p>\n      <button\n        onClick={e => {\n          deleteItem(id);\n        }}\n        className={css.btn}\n      >\n        <img src={del} width=\"15px\" alt=\"notadickpic\" />\n      </button>\n      <button\n        onClick={() => {\n          if (state.fontWeight === 400) {\n            changeState({\n              backgroundColor: 'red',\n              fontWeight: 700,\n              color: 'white',\n            });\n          } else {\n            changeState({\n              backgroundColor: '#b2faa2',\n              fontWeight: 400,\n              color: 'black',\n            });\n          }\n        }}\n        className={css.btn}\n      >\n        <img src={im} width=\"15px\" alt=\"notadickpic\" />\n      </button>\n    </li>\n  );\n};\n\n// Contact.propTypes = {\n//   contacts: PropTypes.shape({\n//     name: PropTypes.string,\n//     tel: PropTypes.string,\n//     id: PropTypes.string,\n//   }),\n//   deleteItem: PropTypes.func,\n// };\n\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__R0BG5\",\"item\":\"contactList_item__iETfD\",\"text\":\"contactList_text__2xPhM\",\"btn\":\"contactList_btn__D1sqk\"};","import Contact from 'components/Contact/Contact';\nimport css from './contactList.module.css';\n\nconst Contacts = ({ contacts, removeContact }) => {\n  console.log(contacts);\n  const elements =\n    contacts &&\n    contacts.map(({ name, number, id }) => {\n      return (\n        <Contact\n          name={name}\n          number={number}\n          id={id}\n          key={id}\n          deleteItem={removeContact}\n        />\n      );\n    });\n\n  return <ul className={css.list}>{elements}</ul>;\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__uqyDS\",\"head\":\"Input_head__NB0IA\",\"disclaimer\":\"Input_disclaimer__qVTF5\"};","import PropTypes from 'prop-types';\nimport s from './Input.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <h2 className={s.head}>Phone book</h2>\n      <p className={s.disclaimer}>use it on your own risk</p>\n\n      <input\n        className={s.input}\n        style={{ display: 'block', marginTop: '5px' }}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"item\":\"Form_item__zhObj\",\"btn\":\"Form_btn__0ebGo\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport s from './Form.module.css';\nconst ContactForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(state);\n    setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <input\n        placeholder=\"name\"\n        className={s.item}\n        onChange={handleChange}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <input\n        placeholder=\"phone\"\n        className={s.item}\n        onChange={handleChange}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={s.btn} type=\"submit\">\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","export const getItems = (state) => state.contacts.items","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"AddRandom_btn__gPFcE\"};","import React from 'react';\nimport css from './AddRandom.module.css';\n\nconst AddRandom = ({ addItem }) => {\n  return (\n    <button\n      onClick={() =>\n        addItem({\n          name: Math.random().toString(36).substring(2, 7),\n          phone: Math.floor(100000000 + Math.random() * 900000000),\n        })\n      }\n      className={css.btn}\n    >\n      Add random (for testing)\n    </button>\n  );\n};\n\nexport default AddRandom;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from 'components/Form/Form';\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from 'redux/items/items-operations';\nimport { setFilter } from 'redux/filter/filter-action';\n\nimport { getItems } from 'redux/items/selectors';\nimport { getFilter } from 'redux/filter/selectors';\nimport AddRandom from 'components/AddRandom/AddRandom';\n\nconst Contacts = () => {\n  const getState = ({ contacts }) => ({\n    loading: contacts.loading,\n    error: contacts.error,\n  });\n\n  const contacts = useSelector(getItems);\n  const filter = useSelector(getFilter);\n  const { loading, error } = useSelector(getState);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = data => {\n    const action = addContact(data);\n    dispatch(action);\n  };\n\n  const onRemoveContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  const getFiltredContacts = () => {\n    const normalizeFilter = filter?.toLowerCase();\n    const filterContacts = contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n    return filterContacts;\n  };\n\n  const filtredArray = getFiltredContacts();\n  return (\n    <div>\n      <Filter\n        value={filter}\n        onChange={event => dispatch(setFilter(event.currentTarget.value))}\n      />\n      {error && <p>Не удалось загрузить контакты! </p>}\n      {loading ? (\n        <p>...Loadind</p>\n      ) : (\n        <ContactList contacts={filtredArray} removeContact={onRemoveContact} />\n      )}\n      <ContactForm onSubmit={onAddContact} />\n\n      <AddRandom onSubmit={onAddContact} />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["props","name","id","number","deleteItem","console","log","useState","backgroundColor","fontWeight","state","changeState","className","css","style","onClick","e","src","del","width","alt","color","im","contacts","removeContact","elements","map","value","onChange","s","display","marginTop","type","onSubmit","setState","handleChange","target","preventDefault","placeholder","pattern","title","required","getItems","items","getFilter","filter","addItem","Math","random","toString","substring","phone","floor","useSelector","loading","error","dispatch","useDispatch","useEffect","fetchContacts","onAddContact","data","action","addContact","filtredArray","normalizeFilter","toLowerCase","contact","includes","getFiltredContacts","event","setFilter","currentTarget","ContactList"],"sourceRoot":""}